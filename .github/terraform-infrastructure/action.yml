name: "Terraform plan and apply to Azure"
description: "Plan and apply Terraform changes to Azure"
inputs:
  tf-vars:
    description: "Terraform variables"
    required: true
  subscription-id:
    description: "Azure subscription ID"
    required: true
  client-id:
    description: "Azure client ID"
    required: true
  tenant-id:
    description: "Azure tenant ID"
    required: true

runs:
  using: "composite"
  steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Set input as environment variable
        shell: bash
        run: echo "MY_ENV_VAR=${{ inputs.my_input }}" >> $GITHUB_ENV

      - name: Set up Azure
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.client-id }}
          tenant-id: ${{ inputs.tenant-id }}
          subscription-id: ${{ inputs.subscription-id }}

      - name: Export Terraform variables to terraform.tfvars
        shell: bash
        working-directory: ./infrastructure/terraform/environments/test
        run: |
          echo '${{ inputs.tf-vars }}' >> terraform.tfvars

      - name: Terraform init
        shell: bash
        working-directory: ./infrastructure/terraform/environments/test
        env:
          ARM_CLIENT_ID: ${{ inputs.client-id }}
          ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
          ARM_TENANT_ID: ${{ inputs.tenant-id }}
        run: terraform init

      
      - name: Terraform validate
        shell: bash
        working-directory: ./infrastructure/terraform/environments/test
        env:
          ARM_CLIENT_ID: ${{ inputs.client-id }}
          ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
          ARM_TENANT_ID: ${{ inputs.tenant-id }}
        run: terraform validate
      
      - name: Terraform plan
        shell: bash
        working-directory: ./infrastructure/terraform/environments/test
        env:
          ARM_CLIENT_ID: ${{ inputs.client-id }}
          ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
          ARM_TENANT_ID: ${{ inputs.tenant-id }}
        run: terraform plan -out=tfplan

      - name: Terraform apply
        shell: bash
        working-directory: ./infrastructure/terraform/environments/test
        env:
          ARM_CLIENT_ID: ${{ inputs.client-id }}
          ARM_SUBSCRIPTION_ID: ${{ inputs.subscription-id }}
          ARM_TENANT_ID: ${{ inputs.tenant-id }}        
        run: terraform apply -auto-approve tfplan

